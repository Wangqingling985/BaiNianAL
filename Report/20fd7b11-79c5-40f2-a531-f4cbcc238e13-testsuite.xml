<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1539342850693" stop="1539342896931">
  <name>test_address</name>
  <labels/>
  <test-cases>
    <test-case start="1539342850693" status="broken" stop="1539342896883">
      <name>TestAddress.test_add_address[\u674e\u56db-18600000000-\u5e7f\u4e1c\u7701-\u5e7f\u5dde\u5e02-\u6d77\u73e0\u533a-\u6cb3\u5317\u7701\u6d77\u73e0\u533a-666666]</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;class 'test_address.TestAddress'&gt;

    def setup_class(self):
        # 登录成功
        self.page=PageIn(get_driver())
&gt;       self.page.page_get_login().page_login('18610453007','123456')

Scripts\test_address.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page\page_login.py:60: in page_login
    self.page_click_me()
c:\python36\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
Page\page_login.py:9: in page_click_me
    self.base_click(Page.me_btn)
Base\base.py:17: in base_click
    self.base_find_element(loc).click()
Base\base.py:8: in base_find_element
    return WebDriverWait(self.driver,timeout=timeout,poll_frequency=poll).until(lambda x:x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="360e281d-a7cf-4f9f-b601-79b32b5343c5")&gt;
method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x0000022A84CE4D08&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="83696-MainThread"/>
        <label name="host" value="LAPTOP-T34O4NDC"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1539342866626" status="failed" stop="1539342896767">
          <name>点击我</name>
          <title>点击我</title>
          <attachments/>
          <steps/>
        </step>
      </steps>
    </test-case>
    <test-case start="1539342896886" status="broken" stop="1539342896904">
      <name>TestAddress.test_xiugai_address[\u5728\u804c-18600000000-\u5e7f\u4e1c\u7701-\u5e7f\u5dde\u5e02-\u6d77\u73e0\u533a-\u6cb3\u5317\u7701\u6d77\u73e0\u533a-666666-\u4fdd\u5b58\u6210\u529f]</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;class 'test_address.TestAddress'&gt;

    def setup_class(self):
        # 登录成功
        self.page=PageIn(get_driver())
&gt;       self.page.page_get_login().page_login('18610453007','123456')

Scripts\test_address.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page\page_login.py:60: in page_login
    self.page_click_me()
c:\python36\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
Page\page_login.py:9: in page_click_me
    self.base_click(Page.me_btn)
Base\base.py:17: in base_click
    self.base_find_element(loc).click()
Base\base.py:8: in base_find_element
    return WebDriverWait(self.driver,timeout=timeout,poll_frequency=poll).until(lambda x:x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="360e281d-a7cf-4f9f-b601-79b32b5343c5")&gt;
method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x0000022A84CE4D08&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="83696-MainThread"/>
        <label name="host" value="LAPTOP-T34O4NDC"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1539342896906" status="broken" stop="1539342896931">
      <name>TestAddress.test_del_address</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;class 'test_address.TestAddress'&gt;

    def setup_class(self):
        # 登录成功
        self.page=PageIn(get_driver())
&gt;       self.page.page_get_login().page_login('18610453007','123456')

Scripts\test_address.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page\page_login.py:60: in page_login
    self.page_click_me()
c:\python36\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
Page\page_login.py:9: in page_click_me
    self.base_click(Page.me_btn)
Base\base.py:17: in base_click
    self.base_find_element(loc).click()
Base\base.py:8: in base_find_element
    return WebDriverWait(self.driver,timeout=timeout,poll_frequency=poll).until(lambda x:x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="360e281d-a7cf-4f9f-b601-79b32b5343c5")&gt;
method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x0000022A84CE4D08&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="83696-MainThread"/>
        <label name="host" value="LAPTOP-T34O4NDC"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
